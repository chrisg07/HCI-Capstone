{"remainingRequest":"/Users/chris.guilliams/Projects/HCI-Capstone/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js??ref--8-1!/Users/chris.guilliams/Projects/HCI-Capstone/node_modules/rxjs/_esm5/internal/operators/concat.js","dependencies":[{"path":"/Users/chris.guilliams/Projects/HCI-Capstone/node_modules/rxjs/_esm5/internal/operators/concat.js","mtime":499162500000},{"path":"/Users/chris.guilliams/Projects/HCI-Capstone/node_modules/cache-loader/dist/cjs.js","mtime":1540859178426},{"path":"/Users/chris.guilliams/Projects/HCI-Capstone/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js","mtime":1528256844000}],"contextDependencies":[],"result":["/** PURE_IMPORTS_START _observable_concat PURE_IMPORTS_END */\n/** PURE_IMPORTS_START _observable_concat PURE_IMPORTS_END */\nimport { concat as concatStatic } from '../observable/concat';\nexport function concat() {\n    var observables = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        observables[_i] = arguments[_i];\n    }\n    return function (source) { return source.lift.call(concatStatic.apply(void 0, [source].concat(observables))); };\n}\n//# sourceMappingURL=concat.js.map\n",null]}